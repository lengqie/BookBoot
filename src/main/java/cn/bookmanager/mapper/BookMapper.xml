<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.bookmanager.mapper.BookMapper">

    <sql id="bookField">
        select isbn, name, type, hot, num, status, create_time, modified_time from book
    </sql>

    <update id="addHot" parameterType="string">
        update book set hot =hot +1 where Isbn =#{Isbn};
    </update>

    <select id="getAllBook" resultType="Book">
        <include refid="bookField"/> where status =1;
    </select>

    <select id="getAllBookOrderByHot" resultType="Book">
        <include refid="bookField"/> where status =1 order by hot desc limit 0,5;
    </select>

    <select id="getBookByName" resultType="Book" parameterType="string">
        <include refid="bookField"/> where status =1 and name like '%${name}%' order by hot desc;
    </select>

    <select id="geAllType" resultType="string" parameterType="Book">
        select type from (
                             select type, sum(hot) as total from book group by type order by total desc) as t;
    </select>

    <select id="getBookByType" resultType="Book">
        <include refid="bookField"/> where  status =1 and type = #{type} order by hot desc;
    </select>

    <select id="getBookByIsbn" parameterType="string" resultType="Book">
        <include refid="bookField"/> book where Isbn =#{isbn};
    </select>

    <insert id="addBook">
        insert into book(isbn, name, type, create_time, modified_time) VALUES (#{isbn},#{name},#{type},#{date},#{date});
    </insert>

    <update id="delBook">
        update book set status = 0 where isbn = #{isbn};
    </update>

    <update id="updateBook" parameterType="Book">
        update book set isbn =#{isbn},name =#{name}, type = #{type}, num = #{num} ,modified_time =#{modifiedTime} where isbn = #{isbn};
    </update>

    <update id="borrowBooks">
        update book set num = num - 1 where Isbn = #{isbn};
        update user set count = count + 1 where id = #{userId};
        update user set total = total + 1 where id = #{userId};
        insert into record values (#{recordId},#{isbn},#{userId},#{createTime},#{days},0,#{createTime});
    </update>

    <update id="returnBooks">
        update book set num = num + 1 where Isbn = #{isbn};
        update user set count = count - 1 where id = #{userId};
        update record set status = 1, modified_time = #{modifiedTime} where record_id = #{recordId};
    </update>



</mapper>