<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.bookmanager.mapper.BookMapper">
<cache />
    <sql id="bookField">
        select isbn, name, type, hot, num, status, create_time, update_time from book
    </sql>

    <update id="addHot" parameterType="string">
        update book set hot =hot +1 where Isbn =#{Isbn};
    </update>

    <select id="getAllBook" useCache="false" resultType="Book">
        <include refid="bookField"/> where status =0;
    </select>

    <select id="getAllBookByPageInfo" useCache="false" resultType="Book">
        <include refid="bookField"/> where status =0
    </select>

    <select id="getHotBook" useCache="true" resultType="Book">
       select isbn, name, type, hot, num, status, create_time, update_time
            from book where status = 0
                order by hot desc LIMIT 0,#{n};
        <!-- <include refid="bookField"></include>where status =1 order by hot desc LIMIT 0,5; -->
    </select>

    <select id="getBookByName" useCache="false" resultType="Book" parameterType="string">
        <include refid="bookField"/>where MATCH (`name`) AGAINST (#{name})
    </select>

    <select id="getBookByNamePageInfo" resultType="cn.bookmanager.entity.Book">
        <include refid="bookField"/>where MATCH (`name`) AGAINST (#{name})
    </select>

    <select id="geAllType" useCache="true" resultType="string" parameterType="Book">
        select type from (
                             select type, sum(hot) as total from book group by type order by total desc) as t;
    </select>

    <select id="getBookByType" useCache="false" resultType="Book">
        <include refid="bookField"/> where  status =0 and type = #{type} order by hot desc;
    </select>

    <select id="getBookByIsbn" useCache="false" parameterType="string" resultType="Book">
        <include refid="bookField"/> book where Isbn =#{isbn};
    </select>

    <insert id="addBook">
        insert into book(isbn, name, type, create_time, update_time) VALUES (#{isbn},#{name},#{type},#{date},#{date});
    </insert>

    <update id="setBookStatus">
        update book set status = #{status} where isbn = #{isbn};
    </update>

    <update id="updateBook" parameterType="Book">
        update book set isbn =#{isbn},name =#{name}, type = #{type}, num = #{num} ,update_time =#{modifiedTime} where isbn = #{isbn};
    </update>

    <update id="borrowBook">
        update book set num = num - 1 where Isbn = #{isbn};
        update user set count = count + 1 where id = #{userId};
        update user set total = total + 1 where id = #{userId};
        insert into record(isbn, user_id, days, status, create_time, update_time)
            values(#{isbn},#{userId},#{createTime},#{days},0,#{createTime});
    </update>

    <update id="returnBook">
        update book set num = num + 1 where Isbn = #{isbn};
        update user set count = count - 1 where id = #{userId};
        update record set status = 0, update_time = #{updateTime} where id = #{recordId};
    </update>

</mapper>